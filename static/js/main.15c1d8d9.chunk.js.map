{"version":3,"sources":["state/actions.js","utils/getColor.js","utils/isOnline.js","serviceWorker.js","components/EntityTable.js","components/ExampleEditor.js","components/IntentEditor.js","components/Editor.js","components/ExampleTable.js","components/ClearButton.js","utils/generateExport.js","components/TopBar.js","components/TextEditor.js","components/AddExampleModal.js","components/CompatibilityAlert.js","components/App.js","index.js","state/reducer.js","state/store.js"],"names":["ROOT_PATH","concat","process","URL_API","RESET","reset","type","EDIT","edit","id","value","className","payload","DELETE_EXAMPLE","deleteExample","SET_SELECTION","setSelection","start","end","FETCH_DATA","fetchData","path","data","loadData","_ref","Object","_home_ygor_Documents_FGA_Lappis_rasa_nlu_trainer_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_ygor_Documents_FGA_Lappis_rasa_nlu_trainer_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","dispatch","response","json","wrap","_context","prev","next","fetch","method","sent","console","log","stop","_x","apply","this","arguments","SET_STATE_API","fetchApi","_ref2","_callee2","_context2","_x2","SAVING_DONE","save","source","_ref3","_callee3","_context3","headers","Accept","Content-Type","body","ok","_x3","EXPAND","expand","COLLAPSE","collapse","OPEN_ADD_MODAL","openAddModal","SET_MODAL_ID","setModalId","CLOSE_ADD_MODAL","closeAddModal","SAVE_AND_CLOSE_ADD_MODAL","saveAndCloseAddModal","global","__webpack_require__","d","__webpack_exports__","getColor","random_seed__WEBPACK_IMPORTED_MODULE_0__","random_seed__WEBPACK_IMPORTED_MODULE_0___default","n","TODAY","Date","toDateString","colors","name","bg","unknownColor","no","startIndex","randomSeed","create","rand","length","backgroundColor","opacity","window","location","origin","indexOf","unregister","Boolean","hostname","match","navigator","serviceWorker","ready","then","registration","EntityTable","entityIndex","key","_this$props","props","example","immutable","set","_this$props2","selection","selectionText","text","substr","react_default","createElement","es_button","onClick","push","entity","disabled","_this","_this$props3","entityNames","entities","columns","title","dataIndex","render","_","auto_complete","style","width","dataSource","onChange","handleChange","index","placeholder","input","event","target","icon","del","marginBottom","table","size","pagination","map","objectSpread","rowKey","renderAddButton","Component","connect","state","idExample","update","actions","ExampleEditor","components_EntityTable","float","styles","color","pointerEvents","padding","whiteSpace","position","top","left","IntentEditor","document","addEventListener","getSelection","anchorNode","selectionAnchorNode","inputNode","selectionStart","selectionEnd","oldText","intent","oldEntities","forEach","oldEntity","oldSelection","findClosestStart","lastMatch","from","Math","abs","_this2","_example$entities","ref","node","findDOMNode","handleTextChange","renderEntityHighlight","Editor","objectProps","defineProperty","onSelect","handleIntentChange","filterOption","inputValue","option","children","toUpperCase","ExampleTable","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","filterDropdownVisible","searchText","tableChangedAt","now","stateIntents","intents","expandeds","filter","isExpanded","_this$state","filters","components_Editor","onFilter","updatedAt","sorter","b","localeCompare","components_IntentEditor","filteredValue","filterDropdown","setState","onFilterDropdownVisibleChange","visible","header","expandedRowKeys","onExpand","expanded","onRow","record","nodeName","showSizeChanger","pageSizeOptions","defaultPageSize","expandedRowRender","components_ExampleEditor","ClearButton","open","popover","placement","onVisibleChange","content","trigger","trimWhitespace","entityText","substring","trim","entityPos","generateExport","store","getState","saveStateFile","utters","stories","nameIntent","originalSource","utter","story","saveJSON","rasa_nlu_data","common_examples","JSON","stringify","button","height","marginTop","marginRight","TopBar","results","_results$","slicedToArray","e","file","parse","result","alert","filename","isUnsaved","fileButtons","display","lib_default","as","handleFileInputChange","blob","Blob","saveAs","marginLeft","flex","components_ClearButton","examples","number","TextEditor","object","objectProp","intentCreate","utterCreate","storyCreate","close","saveAndClose","modalCreate","modal","onOk","onCancel","okText","options","nameComponent","components_TextEditor","utterNames","modalRender","modalClass","find","idExampleInModal","CompatibilityAlert","isChrome","isChromium","chrome","winNav","vendorName","vendor","isOpera","userAgent","isIEedge","undefined","handleClose","App","stateUtters","stateStories","spin","nameUtter","_ref4","components_ExampleTable","components_TopBar","AddExampleModal","components_CompatibilityAlert","isOnline","ReactDOM","react__WEBPACK_IMPORTED_MODULE_2___default","react_redux__WEBPACK_IMPORTED_MODULE_5__","antd_es_locale_provider__WEBPACK_IMPORTED_MODULE_1__","locale","enUS","_components_App__WEBPACK_IMPORTED_MODULE_4__","getElementById","exampleIDCounter","createExample","scope","_ref$intent","_ref$utter","_ref$nameUtter","_ref$nameIntent","_ref$entities","returnJSON","toString","prepareExamples","INITIAL_STATE","createStore","action","getExampleIndex","_id","findIndex","pick","assign","examplesIntents","examplesUtters","examplesStories","exampleUtters","exampleIntents","exampleStories","applyMiddleware","thunk"],"mappings":"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","file":"static/js/main.15c1d8d9.chunk.js","sourcesContent":["// @flow\nconst ROOT_PATH =\n  process.env.NODE_ENV === \"production\"\n    ? `${process.env.URL_API}/rasa`\n    : \"http://localhost:3030/rasa\";\n\nexport const RESET = \"RESET\";\nexport const reset = () => ({\n  type: RESET\n});\n\nexport const EDIT = \"EDIT\";\nexport const edit = (id, value, className) => ({\n  type: EDIT,\n  payload: { id, value, className }\n});\n\nexport const DELETE_EXAMPLE = \"DELETE_EXAMPLE\";\nexport const deleteExample = id => ({\n  type: DELETE_EXAMPLE,\n  payload: { id }\n});\n\nexport const SET_SELECTION = \"SET_SELECTION\";\nexport const setSelection = (id, start, end) => ({\n  type: SET_SELECTION,\n  payload: { id, start, end }\n});\n\nexport const FETCH_DATA = \"FETCH_DATA\";\nexport const fetchData = (path, data) => ({\n  type: FETCH_DATA,\n  payload: { path, data }\n});\nexport const loadData = () => async dispatch => {\n  const response = await fetch(`${ROOT_PATH}`, {\n    method: \"GET\"\n  });\n  const json = await response.json();\n  console.log(json);\n  dispatch(fetchData(\"data.json\", json));\n};\nexport const SET_STATE_API = \"SET_STATE_API\";\nexport const setStateApi = data => ({\n  type: SET_STATE_API,\n  payload: { data }\n});\nexport const fetchApi = () => async dispatch => {\n  const response = await fetch(`${ROOT_PATH}`, {\n    method: \"GET\"\n  });\n  const json = await response.json();\n  dispatch(setStateApi(json));\n};\n\nexport const SAVING_DONE = \"SAVING_DONE\";\nexport const save = source => async dispatch => {\n  const response = await fetch(`${ROOT_PATH}`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: source\n  });\n  //TODO add progressing feedback\n  const json = await response.json();\n  if (json.ok) {\n    dispatch({\n      type: SAVING_DONE\n    });\n  }\n};\n\nexport const EXPAND = \"EXPAND\";\nexport const expand = id => ({\n  type: EXPAND,\n  payload: { id }\n});\n\nexport const COLLAPSE = \"COLLAPSE\";\nexport const collapse = id => ({\n  type: COLLAPSE,\n  payload: { id }\n});\n\nexport const OPEN_ADD_MODAL = \"OPEN_ADD_MODAL\";\nexport const openAddModal = className => ({\n  type: OPEN_ADD_MODAL,\n  payload: { className }\n});\nexport const SET_MODAL_ID = \"SET_MODAL_ID\";\nexport const setModalId = className => ({\n  type: SET_MODAL_ID,\n  className\n});\nexport const CLOSE_ADD_MODAL = \"CLOSE_ADD_MODAL\";\nexport const closeAddModal = className => ({\n  type: CLOSE_ADD_MODAL,\n  payload: { className }\n});\nexport const SAVE_AND_CLOSE_ADD_MODAL = \"SAVE_AND_CLOSE_ADD_MODAL\";\nexport const saveAndCloseAddModal = className => ({\n  type: SAVE_AND_CLOSE_ADD_MODAL,\n  payload: { className }\n});\n","import randomSeed from 'random-seed'\nconst TODAY = new Date().toDateString()\n\nconst colors = [\n  { name: 'blue',    bg: '#0074d9', },\n  { name: 'navy',    bg: '#001f3f', },\n  { name: 'lime',    bg: '#01ff70', },\n  { name: 'teal',    bg: '#39cccc', },\n  { name: 'olive',   bg: '#3d9970', },\n  { name: 'fuchsia', bg: '#f012be', },\n  { name: 'red',     bg: '#ff4136', },\n  { name: 'green',   bg: '#2ecc40', },\n  { name: 'orange',  bg: '#ff851b', },\n  { name: 'maroon',  bg: '#85144b', },\n  { name: 'purple',  bg: '#b10dc9', },\n  { name: 'yellow',  bg: '#ffdc00', },\n  { name: 'aqua',    bg: '#7fdbff', },\n]\n\nconst unknownColor = { name: 'grey', bg: '#aaaaaa', }\n\nexport default function getColor(no) {\n  const rand = randomSeed.create(TODAY)\n  const startIndex = rand(colors.length)\n  const color = no < 0\n    ? unknownColor\n    : colors[(startIndex + no) % colors.length]\n\n  return {\n    backgroundColor: color.bg,\n    opacity: 0.3,\n  }\n}\n\nglobal.getColor = getColor\n","export default window.location.origin.indexOf('github.io') !== -1\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","// @flow\n\nimport React, { Component } from 'react';\nimport { Table, Input, Button, Icon, AutoComplete } from 'antd'\nimport { connect } from 'react-redux'\nimport * as actions from '../state/actions'\nimport immutable from 'object-path-immutable'\n\nconst mapState = (state, props) => {\n  const { example } = props\n  const selection = state.selection && state.selection.idExample === example.id\n    ? state.selection\n    : null\n  return {\n    example,\n    selection,\n  }\n}\n\nconst mapActions = dispatch => ({\n  edit: (idExample, update) => {\n    dispatch(actions.edit(idExample, update))\n  }\n})\n\nclass EntityTable extends Component {\n  handleChange(entityIndex, key, value) {\n    const { example, edit } = this.props\n    edit(example.id, immutable.set(example, `entities.${entityIndex}.${key}`, value))\n  }\n  renderAddButton() {\n    const { edit, example, selection } = this.props\n    const selectionText = selection\n      ? example.text.substr(selection.start, selection.end - selection.start)\n      : null\n\n    return selectionText\n      ? (\n        <Button\n          type='primary'\n          onClick={() => {\n            edit(\n              example.id,\n              immutable.push(example, `entities`, {\n                start: selection.start,\n                end: selection.end,\n                value: selectionText,\n                entity: '',\n              }))\n          }}\n        >\n          {`add an entity for \"${selectionText}\"`}\n        </Button>\n      )\n      : (\n        <Button disabled={true}>\n          'select some part of the text to create a new entity'\n        </Button>\n      )\n  }\n  render() {\n    const { example, edit, entityNames } = this.props\n    const entities = example.entities || []\n\n    const columns = [\n      {\n        title: 'Entity',\n        dataIndex: 'entity',\n        key: 'entity',\n        render: (_, entity) => (\n          <AutoComplete\n            style={{width:200}}\n            dataSource={entityNames}\n            value={entity.entity}\n            onChange={value => this.handleChange(\n              entity.index,\n              'entity',\n              value,\n            )}\n            placeholder='entity'\n          />\n        ),\n      }, {\n        title: 'Value',\n        dataIndex: 'value',\n        key: 'value',\n        render: (_, entity) => (\n          <Input\n            value={entity.value}\n            onChange={event => this.handleChange(\n              entity.index,\n              'value',\n              event.target.value,\n            )}\n            placeholder='value'\n          />\n        ),\n      }, {\n        title: 'Selection',\n        key: 'selection',\n        render: (_, entity) => (\n          <span>\n            {example.text.substr(entity.start, entity.end - entity.start)}\n          </span>\n        ),\n      }, {\n        title: '',\n        key: 'actions',\n        render: (_, entity) => (\n          <span>\n            <Icon type='delete' onClick={() => {\n              edit(example.id, immutable.del(example, `entities.${entity.index}`))\n            }}/>\n          </span>\n        ),\n      },\n    ]\n\n    return (\n      <div style={{marginBottom: 5}}>\n        <Table\n          style={{marginBottom: 8}}\n          size='small'\n          pagination={false}\n          columns={columns}\n          dataSource={entities.map((entity, index) => ({\n            ...entity,\n            index,\n          }))}\n          rowKey='index'\n        />\n        {this.renderAddButton()}\n      </div>\n    );\n  }\n}\n\nexport default connect(mapState, mapActions)(EntityTable)\n","// @flow\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'antd'\nimport { connect } from 'react-redux'\nimport * as actions from '../state/actions'\nimport EntityTable from './EntityTable'\n\nconst mapActions = dispatch => ({\n  deleteExample: (idExample) => {\n    dispatch(actions.deleteExample(idExample))\n  },\n})\n\nclass ExampleEditor extends Component {\n  render() {\n    const { example, deleteExample, entityNames } = this.props\n\n    return (\n      <div>\n        <EntityTable example={example} entityNames={entityNames} />\n        <Button\n          style={{ float: 'right' }}\n          onClick={() => deleteExample(example.id)}\n        >\n          Delete example\n        </Button>\n      </div>\n    )\n  }\n}\n\nExampleEditor.propTypes = {\n  example: PropTypes.shape({\n    text: PropTypes.string.isRequired,\n    intent: PropTypes.string.isRequired,\n    entities: PropTypes.arrayOf(PropTypes.shape({\n      start: PropTypes.number.isRequired,\n      end: PropTypes.number.isRequired,\n      value: PropTypes.string.isRequired,\n      entity: PropTypes.string.isRequired,\n    })),\n  })\n}\n\nexport default connect(null, mapActions)(ExampleEditor)\n","// @flow\n\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom'\nimport { connect } from 'react-redux'\nimport getColor from '../utils/getColor'\nimport * as actions from '../state/actions'\nimport { Input } from 'antd'\n\nconst styles = {\n  text: {},\n  highlightText: {\n    color: 'transparent',\n    pointerEvents: 'none',\n    padding: '5px 8px',\n    whiteSpace: 'pre',\n  },\n  zeroPos: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n  },\n  input: {\n    background: 'none',\n    border: 'none',\n    width: '100%',\n  }\n}\n\nconst mapActions = dispatch => ({\n  edit: (idExample, update, className) => {\n    dispatch(actions.edit(idExample, update, className))\n  },\n  setSelection: (idExample, start, end) => {\n    dispatch(actions.setSelection(idExample, start, end))\n  },\n})\n\nclass IntentEditor extends Component {\n  selectionAnchorNode: Node;\n  inputNode: HTMLInputElement;\n\n  componentDidMount() {\n    document.addEventListener('selectionchange', () => {\n      const { setSelection, example } = this.props\n      const selection = window.getSelection()\n\n      if (\n        selection.anchorNode\n        && selection.anchorNode === this.selectionAnchorNode\n      ) {\n        setSelection(\n          example.id,\n          this.inputNode.selectionStart,\n          this.inputNode.selectionEnd,\n        )\n      }\n    }, false)\n  }\n\n  handleTextChange(event: Object) {\n    const {\n      example,\n      edit,\n      className\n    } = this.props\n    const {\n      intent: oldText,\n      entities: oldEntities,\n    } = example\n    const intent = event.target.value\n    const entities = []\n\n    //update the entity boudaries\n\n    oldEntities.forEach(oldEntity => {\n      const oldSelection = oldText.substr(\n        oldEntity.start,\n        oldEntity.end - oldEntity.start,\n      )\n\n      function findClosestStart(lastMatch: ?number) {\n        if (!lastMatch) {\n          const index = intent.indexOf(oldSelection)\n          if (index === -1) {\n            return index\n          }\n          else {\n            return findClosestStart(index)\n          }\n        }\n        else {\n          const from = lastMatch + oldSelection.length\n          const index = intent.indexOf(oldSelection, from)\n          if (index === -1) {\n            return lastMatch\n          }\n          const prevDiff = Math.abs(oldEntity.start - lastMatch)\n          const nextDiff = Math.abs(oldEntity.start - index)\n          if (prevDiff < nextDiff) {\n            return lastMatch\n          }\n          else {\n            return findClosestStart(index)\n          }\n        }\n      }\n      const start = findClosestStart()\n      if (start === -1) {\n        return\n      }\n\n      entities.push({\n        ...oldEntity,\n        start: start,\n        end: start + oldSelection.length,\n      })\n    })\n\n    edit(example.id, {\n      intent,\n      entities,\n    }, className)\n  }\n\n  renderEntityHighlight(intent: string, entity: Object, key: number) {\n    const { entityNames } = this.props\n    const start = intent.substr(0, entity.start)\n    const value = intent.substr(entity.start, entity.end - entity.start)\n    const end = intent.substr(entity.end)\n    return (\n      <div key={key} style={{ ...styles.zeroPos, ...styles.highlightText }}>\n        <span>{start}</span>\n        <span style={{ ...getColor(entityNames.indexOf(entity.entity)) }}>\n          {value}\n        </span>\n        <span>{end}</span>\n      </div>\n    )\n  }\n\n  render() {\n    const { example, placeholder, style } = this.props\n    const { intent, entities = [] } = example\n\n    return (\n      <div style={{ width: '100%', ...style }}>\n        <div\n          style={{ position: 'relative' }}\n          ref={node => this.selectionAnchorNode = node}\n        >\n          <Input\n            ref={node => this.inputNode = node && findDOMNode(node)}\n            onChange={event => this.handleTextChange(event)}\n            value={intent}\n            placeholder={placeholder}\n          />\n          {entities.map((entity, index) => {\n            return this.renderEntityHighlight(intent, entity, index)\n          })}\n        </div>\n      </div>\n    )\n  }\n}\n\nIntentEditor.propTypes = {\n  example: PropTypes.shape({\n    intent: PropTypes.string.isRequired,\n    entities: PropTypes.arrayOf(PropTypes.shape({\n      start: PropTypes.number.isRequired,\n      end: PropTypes.number.isRequired,\n      value: PropTypes.string.isRequired,\n      entity: PropTypes.string.isRequired,\n    })),\n  })\n}\n\nexport default connect(null, mapActions)(IntentEditor)\n","// @flow\n\nimport React, { Component } from 'react';\nimport { AutoComplete } from 'antd';\nimport { connect } from 'react-redux';\nimport { object } from 'prop-types';\nimport * as actions from '../state/actions';\n\nconst mapActions = dispatch => ({\n  edit: (idExample, update, className) => {\n    dispatch(actions.edit(idExample, update, className));\n  },\n});\n\nclass Editor extends Component {\n  handleIntentChange(value) {\n    const {\n      edit, example, className, objectProps,\n    } = this.props;\n    edit(example.id, { [objectProps]: value }, className);\n  }\n\n  render() {\n    const {\n      example, source, style, placeholder, objectProps,\n    } = this.props;\n    return (\n      <AutoComplete\n        dataSource={source}\n        style={{ width: 230, ...style }}\n        value={example[objectProps]}\n        onSelect={value => this.handleIntentChange(value)}\n        onChange={value => this.handleIntentChange(value)}\n        placeholder={placeholder}\n        filterOption={(inputValue, option) => option.props.children.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1}\n      />\n    );\n  }\n}\n\nexport default connect(null, mapActions)(Editor);\n","// @flow\n\nimport React, { Component } from \"react\";\nimport { Table, Input } from \"antd\";\nimport { connect } from \"react-redux\";\nimport ExampleEditor from \"./ExampleEditor\";\nimport IntentEditor from \"./IntentEditor\";\nimport Editor from \"./Editor\";\nimport * as actions from \"../state/actions\";\n\nconst mapState = state => ({\n  stateIntents: state.intents\n});\n\nconst mapActions = dispatch => ({\n  expand: idExample => {\n    dispatch(actions.expand(idExample));\n  },\n  collapse: idExample => {\n    dispatch(actions.collapse(idExample));\n  }\n});\n\nclass ExampleTable extends Component {\n  state: Object;\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      filterDropdownVisible: false,\n      searchText: \"\",\n      tableChangedAt: Date.now()\n    };\n  }\n  render() {\n    const { stateIntents, expand, collapse, intents, entityNames } = this.props;\n    const expandeds = stateIntents.filter(example => example.isExpanded).map(example => example.id);\n    const { searchText, filterDropdownVisible, tableChangedAt } = this.state;\n    const columns = [\n      {\n        title: \"Intent\",\n        dataIndex: \"intent\",\n        key: \"intent\",\n        filters: intents.map(intent => ({\n          text: intent,\n          value: intent\n        })),\n        render: (_, example) => (\n          <Editor\n            example={example}\n            source={intents}\n            placeholder=\"intent\"\n            objectProps=\"nameIntent\"\n          />\n        ),\n        onFilter: (value, example) =>\n          tableChangedAt < example.updatedAt || example.intent === value,\n        sorter: (a, b) => {\n          return a.intent.localeCompare(b.intent);\n        },\n        width: 250\n      },\n      {\n        title: \"Text\",\n        dataIndex: \"text\",\n        key: \"text\",\n        render: (_, example) => <IntentEditor example={example} entityNames={entityNames} />,\n        sorter: (a, b) => {\n          return a.intent.localeCompare(b.intent);\n        },\n        filteredValue: searchText ? [searchText] : null,\n        onFilter: (value, example) =>\n          tableChangedAt < example.updatedAt || !value || example.text.indexOf(value) !== -1,\n        filterDropdown: (\n          <div className=\"custom-filter-dropdown\">\n            <Input\n              placeholder=\"search in texts\"\n              value={searchText}\n              onChange={event =>\n                this.setState({\n                  searchText: event.target.value\n                })\n              }\n            />\n          </div>\n        ),\n        filterDropdownVisible,\n        onFilterDropdownVisibleChange: visible =>\n          this.setState({\n            filterDropdownVisible: visible\n          })\n      }\n    ];\n\n    return (\n      <Table\n        title={this.props.header}\n        className=\"example-table\"\n        columns={columns}\n        dataSource={stateIntents}\n        rowKey=\"id\"\n        size=\"middle\"\n        expandedRowKeys={expandeds}\n        onExpand={(expanded, example) => {\n          if (expanded) {\n            expand(example.id);\n          } else {\n            collapse(example.id);\n          }\n        }}\n        onRow={record => ({\n          onClick: event => {\n            if (event.target.nodeName === \"TD\") {\n              if (expandeds.indexOf(record.id) !== -1) {\n                collapse(record.id);\n              } else {\n                expand(record.id);\n              }\n            }\n          }\n        })}\n        pagination={{\n          showSizeChanger: true,\n          pageSizeOptions: [\"10\", \"20\", \"40\", \"80\", \"160\", \"320\"],\n          defaultPageSize: 40\n        }}\n        expandedRowRender={example => <ExampleEditor example={example} entityNames={entityNames} />}\n        onChange={() => this.setState({ tableChangedAt: Date.now() })}\n      />\n    );\n  }\n}\n\nexport default connect(\n  mapState,\n  mapActions\n)(ExampleTable);\n","// @flow\n\nimport React, { Component } from 'react';\nimport { Button, Popover } from 'antd'\nimport { connect } from 'react-redux'\nimport * as actions from '../state/actions'\n\nconst mapActions = dispatch => ({\n  reset: () => {\n    dispatch(actions.reset())\n  },\n})\n\nclass ClearButton extends Component {\n  state: Object;\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      open: false,\n    }\n  }\n  render() {\n    const { reset, style } = this.props\n\n    return (\n      <Popover\n        placement='bottomRight'\n        title={'Do you want to clear all the examples?'}\n        visible={this.state.open}\n        onVisibleChange={open => this.setState({ open })}\n        content={\n          <Button\n            onClick={() => {\n              reset()\n              this.setState({ open: false })\n            }}\n          >\n            Yes\n          </Button>\n        }\n        trigger='click'\n      >\n        <Button style={style}>\n          Clear\n        </Button>\n      </Popover>\n    )\n  }\n}\n\nexport default connect(null, mapActions)(ClearButton)\n","import store from \"../state/store\";\nimport immutable from \"object-path-immutable\";\n\nfunction trimWhitespace(text, entities) {\n  return entities.map(entity => {\n    let entityText = text.substring(entity.start, entity.end).trim();\n    let entityPos = text.indexOf(entityText);\n    return {\n      start: entityPos,\n      end: entityPos + entityText.length,\n      value: entity.value,\n      entity: entity.entity\n    };\n  });\n}\n\nexport default function() {\n  const state = store.getState();\n  const saveStateFile = {\n    intents: state.intents,\n    utters: state.utters,\n    stories: state.stories\n  };\n  saveStateFile.intents = saveStateFile.intents.map(({ nameIntent, intent, entities }) => ({\n    nameIntent,\n    intent,\n    entities: trimWhitespace(intent, entities)\n  }));\n  const source = immutable.set(\n    state.originalSource,\n    \"rasa_nlu_data.common_examples\",\n    saveStateFile\n  );\n  const { intents, utters, stories } = state;\n  intents.map(intent => {\n    delete intent.updatedAt;\n    delete intent.id;\n    delete intent.isExpanded;\n  });\n  utters.map(utter => {\n    delete utter.updatedAt;\n    delete utter.id;\n    delete utter.isExpanded;\n  });\n  stories.map(story => {\n    delete story.updatedAt;\n    delete story.id;\n    delete story.isExpanded;\n  });\n  const saveJSON = { rasa_nlu_data: { common_examples: { intents, utters, stories } } };\n  fetch(`${process.env.URL_API}/rasa`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(saveJSON)\n  });\n  console.log(state);\n  return JSON.stringify(source, null, 2);\n}\n","// @flow\n\nimport React, { Component } from 'react';\nimport { Button, Icon } from 'antd'\nimport { connect } from 'react-redux'\nimport * as actions from '../state/actions'\n//import isOnline from '../utils/isOnline'\nimport ClearButton from './ClearButton'\nimport FileReaderInput from 'react-file-reader-input'\nimport { saveAs } from 'file-saver'\nimport generateExport from '../utils/generateExport'\n\nconst mapState = (state) => ({\n  filename: state.filename || 'loading...',\n  isUnsaved: state.isUnsaved,\n  examples: state.examples,\n})\n\nconst mapActions = dispatch => ({\n  save: (examples) => {\n    dispatch(actions.save(examples))\n  },\n  openAddModal: (number) => {\n    dispatch(actions.openAddModal(number))\n  },\n  fetchData: (path, data) => {\n    dispatch(actions.fetchData(path, data))\n  },\n})\n\nconst styles = {\n  button: {\n    height: 28,\n    marginTop: 2,\n    marginRight: 8,\n  }\n}\n\nclass TopBar extends Component {\n  handleFileInputChange(_, results) {\n    const [e, file] = results[0]\n    let data\n    try {\n      data = JSON.parse(e.target.result)\n    }\n    catch (e) {\n      return alert('Can\\'t JSON parse the selected file :(')\n    }\n    data.rasa_nlu_data = data.rasa_nlu_data || {}\n    data.rasa_nlu_data.common_examples = data.rasa_nlu_data.common_examples || []\n    this.props.fetchData(file.name, data)\n  }\n  render() {\n    const { filename, isUnsaved, save, openAddModal } = this.props\n    const isOnline = true\n    const fileButtons = isOnline\n      ? (\n        <div style={{ display: 'flex' }}>\n          <FileReaderInput\n            as='text'\n            onChange={(e, results) => this.handleFileInputChange(e, results)}\n          >\n            <Button type='ghost' style={styles.button}>\n              <Icon type='upload' /> Click to Upload\n            </Button>\n          </FileReaderInput>\n          <Button\n            type={isUnsaved ? 'primary' : 'ghost'}\n            style={styles.button}\n            onClick={() => {\n              let blob = new Blob(\n                [generateExport()],\n                { type: 'text/plain;charset=utf-8' },\n              )\n              debugger\n              saveAs(blob, filename)\n            }}\n          >\n            <Icon type='download' /> Baixar\n          </Button>\n        </div>\n      )\n      : (\n        <Button\n          style={styles.button}\n          type={isUnsaved ? 'primary' : 'default'}\n          onClick={() => save(generateExport())}\n        >\n          Save\n        </Button>\n      )\n\n    return (\n      <div style={{ height: 32, display: 'flex' }}>\n        <h3 style={{ marginLeft: 8, marginTop: 5 }}>\n          {filename}\n        </h3>\n        <div style={{ flex: 1 }} />\n        <Button\n          style={styles.button}\n          type='primary'\n          onClick={() => openAddModal('intents')}\n          key={\"intentButton\"}\n        >\n          Add new intent\n        </Button>\n        <Button\n          style={styles.button}\n          type='primary'\n          onClick={() => openAddModal('utters')}\n          key={\"utterButton\"}\n          >\n          Add new utter\n          </Button>\n          <Button\n          style={styles.button}\n          type='primary'\n          onClick={() => openAddModal('stories')}\n          key={\"storieButton\"}\n          >\n          Add new story\n          </Button>\n\n        {fileButtons}\n        <ClearButton style={styles.button} />\n      </div >\n    )\n  }\n}\n\nexport default connect(mapState, mapActions)(TopBar)\n","// @flow\n\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom'\nimport { connect } from 'react-redux'\nimport getColor from '../utils/getColor'\nimport * as actions from '../state/actions'\nimport { Input } from 'antd'\n\nconst styles = {\n  text: {},\n  highlightText: {\n    color: 'transparent',\n    pointerEvents: 'none',\n    padding: '5px 8px',\n    whiteSpace: 'pre',\n  },\n  zeroPos: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n  },\n  input: {\n    background: 'none',\n    border: 'none',\n    width: '100%',\n  }\n}\n\nconst mapActions = dispatch => ({\n  edit: (idExample, update, className) => {\n    dispatch(actions.edit(idExample, update, className))\n  },\n  setSelection: (idExample, start, end) => {\n    dispatch(actions.setSelection(idExample, start, end))\n  },\n})\n\nclass TextEditor extends Component {\n  selectionAnchorNode: Node;\n  inputNode: HTMLInputElement;\n\n  handleTextChange(event: Object) {\n    const {\n      object,\n      edit,\n      className,\n      objectProp\n    } = this.props\n    const text = event.target.value\n\n    //update the entity boudaries\n    edit(object.id, {\n      [objectProp]: text,\n    }, className)\n  }\n\n  render() {\n    const { placeholder, object, style, objectProp } = this.props\n    \n    return (\n      <div style={{ width: '100%', ...style }}>\n        <div\n          style={{ position: 'relative' }}\n          ref={node => this.selectionAnchorNode = node}\n        >\n          <Input\n            ref={node => this.inputNode = node && findDOMNode(node)}\n            onChange={event => this.handleTextChange(event)}\n            value={object[objectProp]}\n            placeholder={placeholder}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nTextEditor.propTypes = {\n  example: PropTypes.shape({\n    text: PropTypes.string.isRequired\n  })\n}\n\nexport default connect(null, mapActions)(TextEditor)\n","// @flow\n\nimport React, { Component } from 'react';\nimport { Modal, Tabs, Icon } from 'antd';\nimport { connect } from 'react-redux';\nimport EntityTable from './EntityTable';\nimport IntentEditor from './IntentEditor';\nimport TextEditor from './TextEditor';\nimport Editor from './Editor';\nimport * as actions from '../state/actions';\n\nconst mapState = (state) => {\n  const {\n    intents, utters, stories, modalClass,\n  } = state;\n  return {\n    intentCreate: intents.find(({ id }) => id === state.idExampleInModal),\n    utterCreate: utters.find(({ id }) => id === state.idExampleInModal),\n    storyCreate: stories.find(({ id }) => id === state.idExampleInModal),\n    modalCreate: modalClass,\n  };\n};\n\nconst mapActions = dispatch => ({\n  close: () => {\n    dispatch(actions.closeAddModal());\n  },\n  saveAndClose: (className) => {\n    dispatch(actions.saveAndCloseAddModal(className));\n  },\n  setModalId: (className) => {\n    dispatch(actions.setModalId(className));\n  },\n});\n\nclass ExampleTable extends Component {\n  render() {\n    const {\n      intentCreate,\n      utterCreate,\n      storyCreate,\n      intents,\n      utters,\n      stories,\n      close,\n      saveAndClose,\n      setModalId,\n      entityNames,\n      modalCreate,\n    } = this.props;\n\n    const modalRender = () => {\n      let options;\n      if (modalCreate === 'intents' && intentCreate) {\n        options = (\n          <div>\n            <Editor\n              example={intentCreate}\n              source={intents}\n              objectProps=\"nameIntent\"\n              style={{ marginBottom: 5 }}\n              nameComponent=\"intent\"\n              className=\"intents\"\n              placeholder=\"Name Intent\"\n            />\n            <IntentEditor\n              example={intentCreate}\n              source={intents}\n              style={{ marginBottom: 5 }}\n              nameComponent=\"intent\"\n              className=\"intents\"\n              placeholder=\"Intent\"\n            />\n            <EntityTable example={intentCreate} entityNames={entityNames} />\n          </div>\n        );\n      } else if (modalCreate === 'utters' && utterCreate) {\n        options = (\n          <div>\n            <TextEditor\n              object={utterCreate}\n              utterNames={utters}\n              style={{ marginBottom: 5 }}\n              className=\"utters\"\n              placeholder=\"Name Utter\"\n              objectProp=\"nameUtter\"\n            />\n            <TextEditor\n              object={utterCreate}\n              source={utters}\n              style={{ marginBottom: 5 }}\n              nameComponent=\"utter\"\n              className=\"utters\"\n              placeholder=\"Utter\"\n              objectProp=\"utter\"\n            />\n          </div>\n        );\n      } else if (modalCreate === 'stories' && storyCreate) {\n        options = (\n          <div>\n            <Editor\n              example={storyCreate}\n              source={intents}\n              objectProps=\"nameIntent\"\n              style={{ marginBottom: 5 }}\n              nameComponent=\"intent\"\n              className=\"stories\"\n              placeholder=\"Name Intent\"\n            />\n            <Editor\n              example={storyCreate}\n              source={utters}\n              objectProps=\"nameUtter\"\n              style={{ marginBottom: 5 }}\n              nameComponent=\"utter\"\n              className=\"stories\"\n              placeholder=\"Name Utter\"\n            />\n            {/* <TextEditor\n              object={storyCreate}\n              style={{ marginBottom: 5 }}\n              className=\"stories\"\n              placeholder=\"Name Intent\"\n              objectProp=\"nameIntent\"\n            />\n            <TextEditor\n              object={storyCreate}\n              utterNames={utters}\n              style={{ marginBottom: 5 }}\n              className=\"stories\"\n              placeholder=\"Name Utter\"\n              objectProp=\"nameUtter\"\n            /> */}\n          </div>\n        );\n      }\n      return options;\n    };\n    return (\n      <Modal\n        title=\"Add example\"\n        visible={Boolean(intentCreate) || Boolean(utterCreate) || Boolean(storyCreate)}\n        onOk={() => saveAndClose(modalCreate)}\n        onCancel={() => close()}\n        okText=\"add\"\n      >\n        {modalRender()}\n      </Modal>\n    );\n  }\n}\n\nexport default connect(\n  mapState,\n  mapActions,\n)(ExampleTable);\n","// @flow\n\nimport React, { Component } from 'react'\nimport { Modal } from 'antd'\nimport { connect } from 'react-redux'\n\nconst mapState = (state) => ({\n  examples: state.examples\n})\n\nclass CompatibilityAlert extends Component {\n  constructor(props) {\n    super(props)\n\n    let isChrome = false\n    //http://stackoverflow.com/questions/4565112/javascript-how-to-find-out-if-the-user-browser-is-chrome/13348618#13348618\n    // please note,\n    // that IE11 now returns undefined again for window.chrome\n    // and new Opera 30 outputs true for window.chrome\n    // and new IE Edge outputs to true now for window.chrome\n    // and if not iOS Chrome check\n    // so use the below updated condition\n    const isChromium = window.chrome\n    const winNav = window.navigator\n    const vendorName = winNav.vendor\n    const isOpera = winNav.userAgent.indexOf('OPR') > -1\n    const isIEedge = winNav.userAgent.indexOf('Edge') > -1\n    const isIOSChrome = winNav.userAgent.match('CriOS')\n\n    if (isIOSChrome) {\n       isChrome = true\n    } else if (\n      isChromium !== null &&\n      isChromium !== undefined &&\n      vendorName === 'Google Inc.' &&\n      isOpera === false &&\n      isIEedge === false\n    ) {\n       isChrome = true\n    }\n\n    this.state = { visible: !isChrome }\n  }\n\n  handleClose () {\n    this.setState({\n      visible: false\n    })\n  }\n\n  render () {\n    return (\n      <Modal title='Compatibility Alert' visible={this.state.visible}\n        onOk={() => this.handleClose()} onCancel={() => this.handleClose()}\n      >\n        <div>\n          <h4>At the moment, this tool is only tested in Chrome browser. </h4>\n          <p>Known issues:</p>\n          <ul>\n            <li>{` - Intent selection doesn't work in Firefox`}</li>\n          </ul>\n          <p>You are welcomed to test and file/fix issues in other browsers but for working use please switch to Chrome.</p>\n        </div>\n      </Modal>\n    )\n  }\n}\n\nexport default connect(mapState)(CompatibilityAlert)\n","// @flow\n\nimport React, { Component } from \"react\";\nimport ExampleTable from \"./ExampleTable\";\nimport TopBar from \"./TopBar\";\nimport AddExampleModal from \"./AddExampleModal\";\nimport CompatibilityAlert from \"./CompatibilityAlert\";\nimport { connect } from \"react-redux\";\nimport { Spin } from \"antd\";\nimport { fetchApi } from \"../state/actions\";\n\nconst mapState = state => ({\n  stateIntents: state.intents,\n  stateUtters: state.utters,\n  stateStories: state.stories\n});\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.dispatch(fetchApi());\n  }\n  render() {\n    const { stateIntents, stateUtters, stateStories } = this.props;\n    if (!stateIntents) {\n      return (\n        <Spin style={{ width: \"100%\", height: \"100%\" }}>\n          <div />\n        </Spin>\n      );\n    }\n\n    const intents = [];\n    stateIntents.forEach(({ nameIntent }) => {\n      if (nameIntent && intents.indexOf(nameIntent) === -1) {\n        intents.push(nameIntent);\n      }\n    });\n\n    const entityNames = [];\n    stateIntents.forEach(example => {\n      example.entities.forEach(({ entity }) => {\n        if (entity && entityNames.indexOf(entity) === -1) {\n          entityNames.push(entity);\n        }\n      });\n    });\n    const utters = [];\n    stateUtters.forEach(({ utter, nameUtter }) => {\n      if (nameUtter && utters.indexOf(nameUtter) === -1) {\n        utters.push(nameUtter);\n      }\n    });\n    const stories = [{ nameIntent: \"\", nameUtter: \"\" }];\n    stateStories.forEach(({ nameIntent, nameUtter }) => {\n      if (nameIntent && nameUtter) {\n        stories.push({ nameIntent, nameUtter });\n      }\n    });\n    return (\n      <div>\n        <ExampleTable intents={intents} entityNames={entityNames} header={() => <TopBar />} />\n        <AddExampleModal\n          intents={intents}\n          entityNames={entityNames}\n          utters={utters}\n          stories={stories}\n        />\n        <CompatibilityAlert />\n      </div>\n    );\n  }\n}\nexport default connect(mapState)(App);\n","// @flow\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\nimport { Provider } from 'react-redux'\nimport enUS from 'antd/lib/locale-provider/en_US'\nimport { LocaleProvider } from 'antd'\nimport * as actions from './state/actions'\nimport './index.css'\nimport isOnline from './utils/isOnline'\nimport store from './state/store'\nimport * as serviceWorker from './serviceWorker'\n\n// only request data from the server if it is running locally\nif (!isOnline) {\n  store.dispatch(actions.loadData())\n}\nglobal.store = store //DEBUG\n\nReactDOM.render(\n  <Provider store={store}>\n    <LocaleProvider locale={enUS}>\n      <App />\n    </LocaleProvider>\n  </Provider>,\n  document.getElementById('root')\n)\nserviceWorker.unregister();","// @flow\nimport immutable from 'object-path-immutable';\nimport pick from 'lodash/pick';\n\nimport {\n  EDIT,\n  DELETE_EXAMPLE,\n  SET_SELECTION,\n  FETCH_DATA,\n  SAVING_DONE,\n  EXPAND,\n  COLLAPSE,\n  SET_MODAL_ID,\n  OPEN_ADD_MODAL,\n  CLOSE_ADD_MODAL,\n  SAVE_AND_CLOSE_ADD_MODAL,\n  RESET,\n  SET_STATE_API,\n} from './actions';\n\nlet exampleIDCounter = 0;\n\nconst createExample = (\n  {\n    intent = '', utter = '', nameUtter = '', nameIntent = '', entities = [],\n  },\n  scope,\n) => {\n  let returnJSON = {};\n  switch (scope) {\n    case 'intents':\n      returnJSON = {\n        nameIntent,\n        intent,\n        entities,\n        updatedAt: Date.now(),\n        isExpanded: false,\n        id: (exampleIDCounter += 1).toString(),\n      };\n      break;\n    case 'utters':\n      returnJSON = {\n        utter,\n        nameUtter,\n        updatedAt: Date.now(),\n        id: (exampleIDCounter += 1).toString(),\n      };\n      break;\n    case 'stories':\n      returnJSON = {\n        nameUtter,\n        nameIntent,\n        updatedAt: Date.now(),\n        id: (exampleIDCounter += 1).toString(),\n      };\n      break;\n    default:\n      return returnJSON;\n  }\n  return returnJSON;\n};\nconst prepareExamples = (examples = [], scope) => examples.map(\n  example => createExample(example, scope),\n);\n\nconst INITIAL_STATE = {\n  filename: 'testData.json',\n  originalSource: null,\n  intents: [{}].map(e => createExample(e, 'intents')),\n  utters: [{}].map(e => createExample(e, 'utters')),\n  stories: [{}].map(e => createExample(e, 'stories')),\n  isUnsaved: false,\n  selection: null,\n  idExampleInModal: null,\n};\nexport default function reducer(state = INITIAL_STATE, action) {\n  const { type, payload } = action;\n\n  const getExampleIndex = (_id, className = 'intents') => state[className].findIndex(({ id }) => id === _id);\n\n  switch (type) {\n    case RESET: {\n      return {\n        ...state,\n        examples: [],\n        isUnsaved: false,\n        selection: null,\n        idExampleInModal: null,\n      };\n    }\n    case EDIT: {\n      const { id, value, className } = payload;\n      const prop = {\n        intents: ['nameIntent', 'intent', 'entities'],\n        utters: ['utter', 'nameUtter'],\n        stories: ['nameIntent', 'nameUtter'],\n      };\n      const update = pick(value, prop[className]);\n      state = immutable.assign(state, `${className}.${getExampleIndex(id, className)}`, {\n        ...update,\n        updatedAt: Date.now(),\n      });\n      return { ...state, isUnsaved: true };\n    }\n    case DELETE_EXAMPLE: {\n      const { id } = payload;\n      state = immutable.del(state, `examples.${getExampleIndex(id)}`);\n      return { ...state, isUnsaved: true };\n    }\n    case SET_SELECTION: {\n      const { id, start, end } = payload;\n      if (start === end) {\n        return state;\n      }\n      return immutable.set(state, 'selection', { idExample: id, start, end });\n    }\n    case SET_STATE_API: {\n      const { data } = payload;\n      state = immutable.set(state, 'intents', data.rasa_nlu_data.common_examples.intents);\n      state = immutable.set(state, 'utters', data.rasa_nlu_data.common_examples.utters);\n      state = immutable.set(state, 'stories', data.rasa_nlu_data.common_examples.stories);\n      return state;\n    }\n    case FETCH_DATA: {\n      const { data, path } = payload;\n      return {\n        ...state,\n        examplesIntents: prepareExamples(data.rasa_nlu_data.common_examples.intents, 'intents'),\n        examplesUtters: prepareExamples(data.rasa_nlu_data.common_examples.utters, 'utters'),\n        examplesStories: prepareExamples(data.rasa_nlu_data.common_examples.stories, 'stories'),\n        originalSource: data,\n        filename: path,\n      };\n    }\n    case SAVING_DONE: {\n      return {\n        ...state,\n        isUnsaved: false,\n      };\n    }\n    case EXPAND: {\n      const { id } = payload;\n\n      return immutable.set(state, `intents.${getExampleIndex(id)}.isExpanded`, true);\n    }\n    case COLLAPSE: {\n      const { id } = payload;\n\n      return immutable.set(state, `intents.${getExampleIndex(id)}.isExpanded`, false);\n    }\n    case SET_MODAL_ID: {\n      const exampleUtters = createExample({}, 'utters');\n      state = immutable.push(state, 'utters', exampleUtters);\n      return immutable.set(state, 'idExampleInModal', exampleUtters.id);\n    }\n    case OPEN_ADD_MODAL: {\n      const { className } = payload;\n      if (className === 'intents') {\n        const exampleIntents = createExample({}, 'intents');\n        state = immutable.push(state, 'intents', exampleIntents);\n        state.modalClass = className;\n        state = immutable.set(state, 'idExampleInModal', exampleIntents.id);\n      } else if (className === 'utters') {\n        const exampleUtters = createExample({}, 'utters');\n        state = immutable.push(state, 'utters', exampleUtters);\n        state.modalClass = className;\n        state = immutable.set(state, 'idExampleInModal', exampleUtters.id);\n      } else if (className === 'stories') {\n        const exampleStories = createExample({}, 'stories');\n        state = immutable.push(state, 'stories', exampleStories);\n        state.modalClass = className;\n        state = immutable.set(state, 'idExampleInModal', exampleStories.id);\n      }\n      return state;\n    }\n    case CLOSE_ADD_MODAL: {\n      const { className } = payload;\n      state = immutable.del(\n        state,\n        `${className}.${getExampleIndex(state.idExampleInModal, className)}`,\n      );\n      return immutable.set(state, 'idExampleInModal', null);\n    }\n    case SAVE_AND_CLOSE_ADD_MODAL: {\n      return immutable.set(state, 'idExampleInModal', null);\n    }\n    default:\n      return state;\n  }\n}\n","// @flow\n\nimport { createStore, applyMiddleware } from 'redux'\nimport reducer from './reducer'\nimport thunk from 'redux-thunk'\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(thunk),\n)\nexport default store\n"],"sourceRoot":""}