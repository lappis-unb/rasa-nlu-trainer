{"version":3,"sources":["assets/logo.png","utils/getColor.js","services/auth.js","services/api.js","pages/SignIn/styles.js","pages/SignIn/index.js","state/actions.js","components/EntityTable.js","components/ExampleEditor.js","components/IntentEditor.js","components/Editor.js","components/ExampleTable.js","components/CompatibilityAlert.js","components/App.js","state/reducer.js","state/store.js","routes.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","global","d","__webpack_exports__","getColor","random_seed__WEBPACK_IMPORTED_MODULE_0__","random_seed__WEBPACK_IMPORTED_MODULE_0___default","n","TODAY","Date","toDateString","colors","name","bg","unknownColor","no","startIndex","randomSeed","create","rand","length","backgroundColor","opacity","login","token","localStorage","setItem","api","axios","baseURL","interceptors","request","use","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","config","configAuthorized","wrap","_context","prev","next","getItem","headers","Authorization","concat","abrupt","stop","_x","apply","this","arguments","Container","styled","div","withConfig","displayName","componentId","Form","form","SignIn","state","email","password","error","handleSignIn","e","_this$state","history","response","preventDefault","_this","props","setState","post","sent","data","push","t0","console","log","_this2","react_default","createElement","onSubmit","src","Logo","alt","type","placeholder","onChange","target","value","Component","withRouter","RESET","process","EDIT","edit","id","className","payload","DELETE_EXAMPLE","SET_SELECTION","FETCH_DATA","SET_STATE_API","SAVING_DONE","EXPAND","COLLAPSE","OPEN_ADD_MODAL","SET_MODAL_ID","CLOSE_ADD_MODAL","SAVE_AND_CLOSE_ADD_MODAL","EntityTable","entityIndex","key","_this$props","example","immutable","set","_this$props2","selection","selectionText","text","substr","start","end","es_button","onClick","entity","disabled","_this$props3","entityNames","entities","columns","title","dataIndex","render","_","auto_complete","style","width","dataSource","handleChange","index","input","event","icon","del","marginBottom","table","size","pagination","map","objectSpread","rowKey","renderAddButton","connect","idExample","dispatch","update","actions","ExampleEditor","deleteExample","components_EntityTable","float","styles","color","pointerEvents","padding","whiteSpace","position","top","left","IntentEditor","document","addEventListener","setSelection","window","getSelection","anchorNode","selectionAnchorNode","inputNode","selectionStart","selectionEnd","oldText","intent","oldEntities","forEach","oldEntity","oldSelection","findClosestStart","lastMatch","from","indexOf","Math","abs","_example$entities","ref","node","findDOMNode","handleTextChange","renderEntityHighlight","Editor","objectProps","defineProperty","source","onSelect","handleIntentChange","filterOption","inputValue","option","children","toUpperCase","ExampleTable","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","filterDropdownVisible","searchText","tableChangedAt","now","stateIntents","expand","collapse","intents","expandeds","filter","isExpanded","filters","components_Editor","onFilter","updatedAt","sorter","b","localeCompare","components_IntentEditor","filteredValue","filterDropdown","onFilterDropdownVisibleChange","visible","header","expandedRowKeys","onExpand","expanded","onRow","record","nodeName","showSizeChanger","pageSizeOptions","defaultPageSize","expandedRowRender","components_ExampleEditor","CompatibilityAlert","isChrome","isChromium","chrome","winNav","navigator","vendorName","vendor","isOpera","userAgent","isIEedge","match","undefined","modal","onOk","handleClose","onCancel","examples","theme","light","dark","textColor","SubMenu","Content","Header","Sider","Footer","App","mode","hash","letter","changeMode","changeTheme","layout","minHeight","menu","defaultSelectedKeys","defaultOpenKeys","Item","es_switch","background","margin","stateUtters","utters","stateStories","stories","exampleIDCounter","createExample","scope","_ref$intent","_ref$utter","utter","_ref$nameUtter","nameUtter","_ref$nameIntent","nameIntent","_ref$entities","returnJSON","toString","prepareExamples","INITIAL_STATE","filename","originalSource","isUnsaved","idExampleInModal","store","createStore","action","getExampleIndex","_id","findIndex","_ref2","pick","assign","rasa_nlu_data","common_examples","path","examplesIntents","examplesUtters","examplesStories","exampleUtters","exampleIntents","modalClass","exampleStories","applyMiddleware","thunk","PrivateRoute","component","rest","objectWithoutProperties","react_router","userAuth","PRODUCTION","isAuthenticated","to","pathname","location","Routes","es","react_router_dom","exact","routes_PrivateRoute","Fragment","routes","ReactDOM","src_App","getElementById"],"mappings":"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","file":"static/js/main.2a90705a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.2dbd8ff8.png\";","import randomSeed from 'random-seed'\nconst TODAY = new Date().toDateString()\n\nconst colors = [\n  { name: 'blue', bg: '#0074d9' },\n  { name: 'navy', bg: '#001f3f' },\n  { name: 'lime', bg: '#01ff70' },\n  { name: 'teal', bg: '#39cccc' },\n  { name: 'olive', bg: '#3d9970' },\n  { name: 'fuchsia', bg: '#f012be' },\n  { name: 'red', bg: '#ff4136' },\n  { name: 'green', bg: '#2ecc40' },\n  { name: 'orange', bg: '#ff851b' },\n  { name: 'maroon', bg: '#85144b' },\n  { name: 'purple', bg: '#b10dc9' },\n  { name: 'yellow', bg: '#ffdc00' },\n  { name: 'aqua', bg: '#7fdbff' }\n]\n\nconst unknownColor = { name: 'grey', bg: '#aaaaaa' }\n\nexport default function getColor (no) {\n  const rand = randomSeed.create(TODAY)\n  const startIndex = rand(colors.length)\n  const color = no < 0\n    ? unknownColor\n    : colors[(startIndex + no) % colors.length]\n\n  return {\n    backgroundColor: color.bg,\n    opacity: 0.3\n  }\n}\n\nglobal.getColor = getColor\n","export const TOKEN_API = '@lappis-Token'\nexport const isAuthenticated = () => {\n  let userAuth = true\n  if (process.env.PRODUCTION) {\n    userAuth = localStorage.getItem(TOKEN_API) !== null\n  }\n  return userAuth\n}\nexport const getToken = () => localStorage.getItem(TOKEN_API)\nexport const login = token => {\n  localStorage.setItem(TOKEN_API, token)\n}\nexport const logout = () => {\n  localStorage.removeItem(TOKEN_API)\n}\n","import axios from 'axios'\nimport { getToken } from './auth'\n\nconst api = axios.create({\n  baseURL: 'http://127.0.0.1:3030'\n})\n\napi.interceptors.request.use(async (config) => {\n  const token = getToken()\n  const configAuthorized = config\n  if (token) {\n    configAuthorized.headers.Authorization = `Baerer ${token}`\n  }\n  return config\n})\n\nexport default api\n","import styled from 'styled-components'\nimport 'font-awesome/css/font-awesome.css'\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n  box-sizing: border-box;\n  padding: 0;\n  margin: 0;\n  outline: 0;\n  background: #eee;\n  font-family: 'Helvetica Neue', 'Helvetica', Arial, sans-serif;\n  text-rendering: optimizeLegibility !important;\n  -webkit-font-smoothing: antialiased !important;\n  width: 100%;\n`\n\nexport const Form = styled.form`\n  width: 400px;\n  background: #fff;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  img {\n    width: 100px;\n    margin: 10px 0 40px;\n  }\n  p {\n    color: #ff3333;\n    margin-bottom: 15px;\n    border: 1px solid #ff3333;\n    padding: 10px;\n    width: 100%;\n    text-align: center;\n  }\n  input {\n    flex: 1;\n    height: 46px;\n    margin-bottom: 15px;\n    padding: 0 20px;\n    color: #777;\n    font-size: 15px;\n    width: 100%;\n    border: 1px solid #ddd;\n    &::placeholder {\n      color: #999;\n    }\n  }\n  button {\n    color: #fff;\n    font-size: 16px;\n    background: #7fd8f8;\n    height: 56px;\n    border: 0;\n    border-radius: 5px;\n    width: 100%;\n  }\n  hr {\n    margin: 20px 0;\n    border: none;\n    border-bottom: 1px solid #cdcdcd;\n    width: 100%;\n  }\n  a {\n    font-size: 16;\n    font-weight: bold;\n    color: #999;\n    text-decoration: none;\n  }\n`\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport Logo from '../../assets/logo.png'\nimport api from '../../services/api'\nimport { login } from '../../services/auth'\n\nimport { Form, Container } from './styles'\n\nclass SignIn extends Component {\n  state = {\n    email: '',\n    password: '',\n    error: ''\n  };\n\n  handleSignIn = async e => {\n    e.preventDefault()\n    const { email, password } = this.state\n    const { history } = this.props\n    if (!email || !password) {\n      this.setState({ error: 'Preencha e-mail e senha para continuar!' })\n    } else {\n      try {\n        const response = await api.post('/login', { email, password })\n        login(response.data.token)\n        history.push('/app')\n      } catch (err) {\n        console.log(err)\n        this.setState({\n          error: 'Houve um problema com o login, verifique suas credenciais. T.T'\n        })\n      }\n    }\n  };\n\n  render () {\n    const { error } = this.state\n    return (\n      <Container>\n        <Form onSubmit={this.handleSignIn}>\n          <img src={Logo} alt=\"Lappis logo\" />\n          {error && <p>{error}</p>}\n          <input\n            type=\"email\"\n            placeholder=\"Endereço de e-mail\"\n            onChange={e => this.setState({ email: e.target.value })}\n          />\n          <input\n            type=\"password\"\n            placeholder=\"Senha\"\n            onChange={e => this.setState({ password: e.target.value })}\n          />\n          <button type=\"submit\">Entrar</button>\n          <hr />\n        </Form>\n      </Container>\n    )\n  }\n}\n\nexport default withRouter(SignIn)\n","// @flow\nconst ROOT_PATH = process.env.NODE_ENV === 'production'\n  ? `${process.env.REACT_APP_URL_API}/rasa`\n  : `http://localhost:3030`\n\nexport const RESET = 'RESET'\nexport const reset = () => ({\n  type: RESET\n})\n\nexport const EDIT = 'EDIT'\nexport const edit = (id, value, className) => ({\n  type: EDIT,\n  payload: { id, value, className }\n})\n\nexport const DELETE_EXAMPLE = 'DELETE_EXAMPLE'\nexport const deleteExample = id => ({\n  type: DELETE_EXAMPLE,\n  payload: { id }\n})\n\nexport const SET_SELECTION = 'SET_SELECTION'\nexport const setSelection = (id, start, end) => ({\n  type: SET_SELECTION,\n  payload: { id, start, end }\n})\n\nexport const FETCH_DATA = 'FETCH_DATA'\nexport const fetchData = (path, data) => ({\n  type: FETCH_DATA,\n  payload: { path, data }\n})\nexport const loadData = () => async (dispatch) => {\n  const response = await fetch(`${ROOT_PATH}`, {\n    method: 'GET'\n  })\n  const json = await response.json()\n  console.log(json)\n  dispatch(fetchData('data.json', json))\n}\nexport const SET_STATE_API = 'SET_STATE_API'\nexport const setStateApi = data => ({\n  type: SET_STATE_API,\n  payload: { data }\n})\nexport const fetchApi = () => async (dispatch) => {\n  const response = await fetch(`${ROOT_PATH}`, {\n    method: 'GET'\n  })\n  const json = await response.json()\n  dispatch(setStateApi(json))\n}\n\nexport const SAVING_DONE = 'SAVING_DONE'\nexport const save = source => async (dispatch) => {\n  const response = await fetch(`${ROOT_PATH}/${process.env.PROJECT_NAME}/info`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: source\n  })\n  // TODO add progressing feedback\n  const json = await response.json()\n  if (json.ok) {\n    dispatch({\n      type: SAVING_DONE\n    })\n  }\n}\n\nexport const EXPAND = 'EXPAND'\nexport const expand = id => ({\n  type: EXPAND,\n  payload: { id }\n})\n\nexport const COLLAPSE = 'COLLAPSE'\nexport const collapse = id => ({\n  type: COLLAPSE,\n  payload: { id }\n})\n\nexport const OPEN_ADD_MODAL = 'OPEN_ADD_MODAL'\nexport const openAddModal = className => ({\n  type: OPEN_ADD_MODAL,\n  payload: { className }\n})\nexport const SET_MODAL_ID = 'SET_MODAL_ID'\nexport const setModalId = className => ({\n  type: SET_MODAL_ID,\n  className\n})\nexport const CLOSE_ADD_MODAL = 'CLOSE_ADD_MODAL'\nexport const closeAddModal = className => ({\n  type: CLOSE_ADD_MODAL,\n  payload: { className }\n})\nexport const SAVE_AND_CLOSE_ADD_MODAL = 'SAVE_AND_CLOSE_ADD_MODAL'\nexport const saveAndCloseAddModal = className => ({\n  type: SAVE_AND_CLOSE_ADD_MODAL,\n  payload: { className }\n})\n","// @flow\n\nimport React, { Component } from 'react';\nimport { Table, Input, Button, Icon, AutoComplete } from 'antd'\nimport { connect } from 'react-redux'\nimport * as actions from '../state/actions'\nimport immutable from 'object-path-immutable'\n\nconst mapState = (state, props) => {\n  const { example } = props\n  const selection = state.selection && state.selection.idExample === example.id\n    ? state.selection\n    : null\n  return {\n    example,\n    selection,\n  }\n}\n\nconst mapActions = dispatch => ({\n  edit: (idExample, update) => {\n    dispatch(actions.edit(idExample, update))\n  }\n})\n\nclass EntityTable extends Component {\n  handleChange(entityIndex, key, value) {\n    const { example, edit } = this.props\n    edit(example.id, immutable.set(example, `entities.${entityIndex}.${key}`, value))\n  }\n  renderAddButton() {\n    const { edit, example, selection } = this.props\n    const selectionText = selection\n      ? example.text.substr(selection.start, selection.end - selection.start)\n      : null\n\n    return selectionText\n      ? (\n        <Button\n          type='primary'\n          onClick={() => {\n            edit(\n              example.id,\n              immutable.push(example, `entities`, {\n                start: selection.start,\n                end: selection.end,\n                value: selectionText,\n                entity: '',\n              }))\n          }}\n        >\n          {`add an entity for \"${selectionText}\"`}\n        </Button>\n      )\n      : (\n        <Button disabled={true}>\n          'select some part of the text to create a new entity'\n        </Button>\n      )\n  }\n  render() {\n    const { example, edit, entityNames } = this.props\n    const entities = example.entities || []\n\n    const columns = [\n      {\n        title: 'Entity',\n        dataIndex: 'entity',\n        key: 'entity',\n        render: (_, entity) => (\n          <AutoComplete\n            style={{width:200}}\n            dataSource={entityNames}\n            value={entity.entity}\n            onChange={value => this.handleChange(\n              entity.index,\n              'entity',\n              value,\n            )}\n            placeholder='entity'\n          />\n        ),\n      }, {\n        title: 'Value',\n        dataIndex: 'value',\n        key: 'value',\n        render: (_, entity) => (\n          <Input\n            value={entity.value}\n            onChange={event => this.handleChange(\n              entity.index,\n              'value',\n              event.target.value,\n            )}\n            placeholder='value'\n          />\n        ),\n      }, {\n        title: 'Selection',\n        key: 'selection',\n        render: (_, entity) => (\n          <span>\n            {example.text.substr(entity.start, entity.end - entity.start)}\n          </span>\n        ),\n      }, {\n        title: '',\n        key: 'actions',\n        render: (_, entity) => (\n          <span>\n            <Icon type='delete' onClick={() => {\n              edit(example.id, immutable.del(example, `entities.${entity.index}`))\n            }}/>\n          </span>\n        ),\n      },\n    ]\n\n    return (\n      <div style={{marginBottom: 5}}>\n        <Table\n          style={{marginBottom: 8}}\n          size='small'\n          pagination={false}\n          columns={columns}\n          dataSource={entities.map((entity, index) => ({\n            ...entity,\n            index,\n          }))}\n          rowKey='index'\n        />\n        {this.renderAddButton()}\n      </div>\n    );\n  }\n}\n\nexport default connect(mapState, mapActions)(EntityTable)\n","// @flow\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'antd'\nimport { connect } from 'react-redux'\nimport * as actions from '../state/actions'\nimport EntityTable from './EntityTable'\n\nconst mapActions = dispatch => ({\n  deleteExample: (idExample) => {\n    dispatch(actions.deleteExample(idExample))\n  },\n})\n\nclass ExampleEditor extends Component {\n  render() {\n    const { example, deleteExample, entityNames } = this.props\n\n    return (\n      <div>\n        <EntityTable example={example} entityNames={entityNames} />\n        <Button\n          style={{ float: 'right' }}\n          onClick={() => deleteExample(example.id)}\n        >\n          Delete example\n        </Button>\n      </div>\n    )\n  }\n}\n\nExampleEditor.propTypes = {\n  example: PropTypes.shape({\n    text: PropTypes.string.isRequired,\n    intent: PropTypes.string.isRequired,\n    entities: PropTypes.arrayOf(PropTypes.shape({\n      start: PropTypes.number.isRequired,\n      end: PropTypes.number.isRequired,\n      value: PropTypes.string.isRequired,\n      entity: PropTypes.string.isRequired,\n    })),\n  })\n}\n\nexport default connect(null, mapActions)(ExampleEditor)\n","// @flow\n\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom'\nimport { connect } from 'react-redux'\nimport getColor from '../utils/getColor'\nimport * as actions from '../state/actions'\nimport { Input } from 'antd'\n\nconst styles = {\n  text: {},\n  highlightText: {\n    color: 'transparent',\n    pointerEvents: 'none',\n    padding: '5px 8px',\n    whiteSpace: 'pre',\n  },\n  zeroPos: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n  },\n  input: {\n    background: 'none',\n    border: 'none',\n    width: '100%',\n  }\n}\n\nconst mapActions = dispatch => ({\n  edit: (idExample, update, className) => {\n    dispatch(actions.edit(idExample, update, className))\n  },\n  setSelection: (idExample, start, end) => {\n    dispatch(actions.setSelection(idExample, start, end))\n  },\n})\n\nclass IntentEditor extends Component {\n  selectionAnchorNode: Node;\n  inputNode: HTMLInputElement;\n\n  componentDidMount() {\n    document.addEventListener('selectionchange', () => {\n      const { setSelection, example } = this.props\n      const selection = window.getSelection()\n\n      if (\n        selection.anchorNode\n        && selection.anchorNode === this.selectionAnchorNode\n      ) {\n        setSelection(\n          example.id,\n          this.inputNode.selectionStart,\n          this.inputNode.selectionEnd,\n        )\n      }\n    }, false)\n  }\n\n  handleTextChange(event: Object) {\n    const {\n      example,\n      edit,\n      className\n    } = this.props\n    const {\n      intent: oldText,\n      entities: oldEntities,\n    } = example\n    const intent = event.target.value\n    const entities = []\n\n    //update the entity boudaries\n\n    oldEntities.forEach(oldEntity => {\n      const oldSelection = oldText.substr(\n        oldEntity.start,\n        oldEntity.end - oldEntity.start,\n      )\n\n      function findClosestStart(lastMatch: ?number) {\n        if (!lastMatch) {\n          const index = intent.indexOf(oldSelection)\n          if (index === -1) {\n            return index\n          }\n          else {\n            return findClosestStart(index)\n          }\n        }\n        else {\n          const from = lastMatch + oldSelection.length\n          const index = intent.indexOf(oldSelection, from)\n          if (index === -1) {\n            return lastMatch\n          }\n          const prevDiff = Math.abs(oldEntity.start - lastMatch)\n          const nextDiff = Math.abs(oldEntity.start - index)\n          if (prevDiff < nextDiff) {\n            return lastMatch\n          }\n          else {\n            return findClosestStart(index)\n          }\n        }\n      }\n      const start = findClosestStart()\n      if (start === -1) {\n        return\n      }\n\n      entities.push({\n        ...oldEntity,\n        start: start,\n        end: start + oldSelection.length,\n      })\n    })\n\n    edit(example.id, {\n      intent,\n      entities,\n    }, className)\n  }\n\n  renderEntityHighlight(intent: string, entity: Object, key: number) {\n    const { entityNames } = this.props\n    const start = intent.substr(0, entity.start)\n    const value = intent.substr(entity.start, entity.end - entity.start)\n    const end = intent.substr(entity.end)\n    return (\n      <div key={key} style={{ ...styles.zeroPos, ...styles.highlightText }}>\n        <span>{start}</span>\n        <span style={{ ...getColor(entityNames.indexOf(entity.entity)) }}>\n          {value}\n        </span>\n        <span>{end}</span>\n      </div>\n    )\n  }\n\n  render() {\n    const { example, placeholder, style } = this.props\n    const { intent, entities = [] } = example\n\n    return (\n      <div style={{ width: '100%', ...style }}>\n        <div\n          style={{ position: 'relative' }}\n          ref={node => this.selectionAnchorNode = node}\n        >\n          <Input\n            ref={node => this.inputNode = node && findDOMNode(node)}\n            onChange={event => this.handleTextChange(event)}\n            value={intent}\n            placeholder={placeholder}\n          />\n          {entities.map((entity, index) => {\n            return this.renderEntityHighlight(intent, entity, index)\n          })}\n        </div>\n      </div>\n    )\n  }\n}\n\nIntentEditor.propTypes = {\n  example: PropTypes.shape({\n    intent: PropTypes.string.isRequired,\n    entities: PropTypes.arrayOf(PropTypes.shape({\n      start: PropTypes.number.isRequired,\n      end: PropTypes.number.isRequired,\n      value: PropTypes.string.isRequired,\n      entity: PropTypes.string.isRequired,\n    })),\n  })\n}\n\nexport default connect(null, mapActions)(IntentEditor)\n","// @flow\n\nimport React, { Component } from 'react';\nimport { AutoComplete } from 'antd';\nimport { connect } from 'react-redux';\nimport { object } from 'prop-types';\nimport * as actions from '../state/actions';\n\nconst mapActions = dispatch => ({\n  edit: (idExample, update, className) => {\n    dispatch(actions.edit(idExample, update, className));\n  },\n});\n\nclass Editor extends Component {\n  handleIntentChange(value) {\n    const {\n      edit, example, className, objectProps,\n    } = this.props;\n    edit(example.id, { [objectProps]: value }, className);\n  }\n\n  render() {\n    const {\n      example, source, style, placeholder, objectProps,\n    } = this.props;\n    return (\n      <AutoComplete\n        dataSource={source}\n        style={{ width: 230, ...style }}\n        value={example[objectProps]}\n        onSelect={value => this.handleIntentChange(value)}\n        onChange={value => this.handleIntentChange(value)}\n        placeholder={placeholder}\n        filterOption={(inputValue, option) => option.props.children.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1}\n      />\n    );\n  }\n}\n\nexport default connect(null, mapActions)(Editor);\n","// @flow\n\nimport React, { Component } from \"react\";\nimport { Table, Input } from \"antd\";\nimport { connect } from \"react-redux\";\nimport ExampleEditor from \"./ExampleEditor\";\nimport IntentEditor from \"./IntentEditor\";\nimport Editor from \"./Editor\";\nimport * as actions from \"../state/actions\";\n\nconst mapState = state => ({\n  stateIntents: state.intents\n});\n\nconst mapActions = dispatch => ({\n  expand: idExample => {\n    dispatch(actions.expand(idExample));\n  },\n  collapse: idExample => {\n    dispatch(actions.collapse(idExample));\n  }\n});\n\nclass ExampleTable extends Component {\n  state: Object;\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      filterDropdownVisible: false,\n      searchText: \"\",\n      tableChangedAt: Date.now()\n    };\n  }\n  render() {\n    const { stateIntents, expand, collapse, intents, entityNames } = this.props;\n    const expandeds = stateIntents.filter(example => example.isExpanded).map(example => example.id);\n    const { searchText, filterDropdownVisible, tableChangedAt } = this.state;\n    const columns = [\n      {\n        title: \"Intent\",\n        dataIndex: \"intent\",\n        key: \"intent\",\n        filters: intents.map(intent => ({\n          text: intent,\n          value: intent\n        })),\n        render: (_, example) => (\n          <Editor\n            example={example}\n            source={intents}\n            placeholder=\"intent\"\n            objectProps=\"intentName\"\n          />\n        ),\n        onFilter: (value, example) =>\n          tableChangedAt < example.updatedAt || example.intent === value,\n        sorter: (a, b) => {\n          return a.intent.localeCompare(b.intent);\n        },\n        width: 250\n      },\n      {\n        title: \"Text\",\n        dataIndex: \"text\",\n        key: \"text\",\n        render: (_, example) => <IntentEditor example={example} entityNames={entityNames} />,\n        sorter: (a, b) => {\n          return a.intent.localeCompare(b.intent);\n        },\n        filteredValue: searchText ? [searchText] : null,\n        onFilter: (value, example) =>\n          tableChangedAt < example.updatedAt || !value || example.text.indexOf(value) !== -1,\n        filterDropdown: (\n          <div className=\"custom-filter-dropdown\">\n            <Input\n              placeholder=\"search in texts\"\n              value={searchText}\n              onChange={event =>\n                this.setState({\n                  searchText: event.target.value\n                })\n              }\n            />\n          </div>\n        ),\n        filterDropdownVisible,\n        onFilterDropdownVisibleChange: visible =>\n          this.setState({\n            filterDropdownVisible: visible\n          })\n      }\n    ];\n\n    return (\n      <Table\n        title={this.props.header}\n        className=\"example-table\"\n        columns={columns}\n        dataSource={stateIntents}\n        rowKey=\"id\"\n        size=\"middle\"\n        expandedRowKeys={expandeds}\n        onExpand={(expanded, example) => {\n          if (expanded) {\n            expand(example.id);\n          } else {\n            collapse(example.id);\n          }\n        }}\n        onRow={record => ({\n          onClick: event => {\n            if (event.target.nodeName === \"TD\") {\n              if (expandeds.indexOf(record.id) !== -1) {\n                collapse(record.id);\n              } else {\n                expand(record.id);\n              }\n            }\n          }\n        })}\n        pagination={{\n          showSizeChanger: true,\n          pageSizeOptions: [\"10\", \"20\", \"40\", \"80\", \"160\", \"320\"],\n          defaultPageSize: 40\n        }}\n        expandedRowRender={example => <ExampleEditor example={example} entityNames={entityNames} />}\n        onChange={() => this.setState({ tableChangedAt: Date.now() })}\n      />\n    );\n  }\n}\n\nexport default connect(\n  mapState,\n  mapActions\n)(ExampleTable);\n","// @flow\n\nimport React, { Component } from 'react'\nimport { Modal } from 'antd'\nimport { connect } from 'react-redux'\n\nconst mapState = (state) => ({\n  examples: state.examples\n})\n\nclass CompatibilityAlert extends Component {\n  constructor(props) {\n    super(props)\n\n    let isChrome = false\n    //http://stackoverflow.com/questions/4565112/javascript-how-to-find-out-if-the-user-browser-is-chrome/13348618#13348618\n    // please note,\n    // that IE11 now returns undefined again for window.chrome\n    // and new Opera 30 outputs true for window.chrome\n    // and new IE Edge outputs to true now for window.chrome\n    // and if not iOS Chrome check\n    // so use the below updated condition\n    const isChromium = window.chrome\n    const winNav = window.navigator\n    const vendorName = winNav.vendor\n    const isOpera = winNav.userAgent.indexOf('OPR') > -1\n    const isIEedge = winNav.userAgent.indexOf('Edge') > -1\n    const isIOSChrome = winNav.userAgent.match('CriOS')\n\n    if (isIOSChrome) {\n       isChrome = true\n    } else if (\n      isChromium !== null &&\n      isChromium !== undefined &&\n      vendorName === 'Google Inc.' &&\n      isOpera === false &&\n      isIEedge === false\n    ) {\n       isChrome = true\n    }\n\n    this.state = { visible: !isChrome }\n  }\n\n  handleClose () {\n    this.setState({\n      visible: false\n    })\n  }\n\n  render () {\n    return (\n      <Modal title='Compatibility Alert' visible={this.state.visible}\n        onOk={() => this.handleClose()} onCancel={() => this.handleClose()}\n      >\n        <div>\n          <h4>At the moment, this tool is only tested in Chrome browser. </h4>\n          <p>Known issues:</p>\n          <ul>\n            <li>{` - Intent selection doesn't work in Firefox`}</li>\n          </ul>\n          <p>You are welcomed to test and file/fix issues in other browsers but for working use please switch to Chrome.</p>\n        </div>\n      </Modal>\n    )\n  }\n}\n\nexport default connect(mapState)(CompatibilityAlert)\n","// @flow\n\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport { Layout, Spin, Menu, Icon, Switch } from 'antd'\nimport ExampleTable from './ExampleTable'\nimport CompatibilityAlert from './CompatibilityAlert'\nimport { fetchApi } from '../state/actions'\nimport theme from 'styled-theming'\nimport styled from 'styled-components'\nconst backgroundColor = theme('mode', {\n  light: '#fafafa',\n  dark: '#222'\n})\nconst textColor = theme('mode', {\n  light: '#000',\n  dark: '#fff'\n})\nconst Wrapper = styled.div`\n  background-color: ${backgroundColor};\n  color: ${textColor}\n`\n\nconst { SubMenu } = Menu\n\nconst { Header, Content, Footer, Sider } = Layout\n\nconst mapState = state => ({\n  stateIntents: state.intents,\n  stateUtters: state.utters,\n  stateStories: state.stories\n})\n\nclass App extends Component {\n  state = {\n    mode: 'inline',\n    theme: {\n      name: 'light',\n      hash: '#fff',\n      letter: '#000'\n    }\n  };\n\n  changeMode = value => {\n    this.setState({\n      mode: value ? 'vertical' : 'inline'\n    })\n  };\n\n  changeTheme = value => {\n    this.setState({\n      theme: {\n        name: value ? 'dark' : 'light',\n        hash: value ? '#061f2f' : '#fff',\n        letter: value ? '#fff' : '#000'\n      }\n    })\n  };\n  componentDidMount () {\n    // this.props.dispatch(fetchApi())\n  }\n\n  render () {\n    // const { stateIntents, stateUtters, stateStories } = this.props\n    // if (!stateIntents) {\n    //   return (\n    //     <Spin style={{ width: '100%', height: '100%' }}>\n    //       <div />\n    //     </Spin>\n    //   )\n    // }\n\n    // const intents = []\n    // stateIntents.forEach(({ nameIntent }) => {\n    //   if (nameIntent && intents.indexOf(nameIntent) === -1) {\n    //     intents.push(nameIntent)\n    //   }\n    // })\n\n    // const entityNames = []\n    // stateIntents.forEach(example => {\n    //   example.entities.forEach(({ entity }) => {\n    //     if (entity && entityNames.indexOf(entity) === -1) {\n    //       entityNames.push(entity)\n    //     }\n    //   })\n    // })\n    // const utters = []\n    // stateUtters.forEach(({ utter, nameUtter }) => {\n    //   if (nameUtter && utters.indexOf(nameUtter) === -1) {\n    //     utters.push(nameUtter)\n    //   }\n    // })\n    // const stories = [{ nameIntent: '', nameUtter: '' }]\n    // stateStories.forEach(({ nameIntent, nameUtter }) => {\n    //   if (nameIntent && nameUtter) {\n    //     stories.push({ nameIntent, nameUtter })\n    //   }\n    // })\n    return (\n      <Layout style={{ minHeight: '100vh' }}>\n        <Sider width={256} theme={this.state.theme.name}>\n          <Menu\n            style={{ width: 256 }}\n            defaultSelectedKeys={['1']}\n            defaultOpenKeys={['sub1']}\n            mode={this.state.mode}\n            theme={this.state.theme.name}\n          >\n            <SubMenu\n              key=\"sub1\"\n              title={\n                <span>\n                  <Icon type=\"appstore\" />\n                  <span>Visualizar Tabelas</span>\n                </span>\n              }\n            >\n              <Menu.Item key=\"3\">Intents</Menu.Item>\n              <Menu.Item key=\"4\">Utters</Menu.Item>\n              <Menu.Item key=\"5\">Stories</Menu.Item>\n            </SubMenu>\n            <SubMenu\n              key=\"sub2\"\n              title={\n                <span>\n                  <Icon type=\"appstore\" />\n                  <span>Adicionar </span>\n                </span>\n              }\n            >\n              <Menu.Item key=\"6\">Intents</Menu.Item>\n              <Menu.Item key=\"7\">Utters</Menu.Item>\n              <Menu.Item key=\"8\">Stories</Menu.Item>\n            </SubMenu>\n            <Switch onChange={this.changeTheme} /> Modo Noturno\n          </Menu>\n        </Sider>\n        <Layout style={{ padding: '0 24px 24px', background: this.state.theme.hash }}>\n          <Content\n            style={{\n              background: this.state.theme.hash,\n              padding: 24,\n              margin: 0,\n              minHeight: 280\n            }}\n          >\n            {/* <ExampleTable intents={intents} entityNames={entityNames} /> */}\n          </Content>\n        </Layout>\n      </Layout>\n    )\n  }\n}\nexport default withRouter(connect(mapState)(App))\n/* <ExampleTable intents={intents} entityNames={entityNames} header={() => <TopBar />} />\n        <AddExampleModal\n          intents={intents}\n          entityNames={entityNames}\n          utters={utters}\n          stories={stories}\n        /> */\n","// @flow\nimport immutable from 'object-path-immutable';\nimport pick from 'lodash/pick';\n\nimport {\n  EDIT,\n  DELETE_EXAMPLE,\n  SET_SELECTION,\n  FETCH_DATA,\n  SAVING_DONE,\n  EXPAND,\n  COLLAPSE,\n  SET_MODAL_ID,\n  OPEN_ADD_MODAL,\n  CLOSE_ADD_MODAL,\n  SAVE_AND_CLOSE_ADD_MODAL,\n  RESET,\n  SET_STATE_API,\n} from './actions';\n\nlet exampleIDCounter = 0;\n\nconst createExample = (\n  {\n    intent = '', utter = '', nameUtter = '', nameIntent = '', entities = [],\n  },\n  scope,\n) => {\n  let returnJSON = {};\n  switch (scope) {\n    case 'intents':\n      returnJSON = {\n        nameIntent,\n        intent,\n        entities,\n        updatedAt: Date.now(),\n        isExpanded: false,\n        id: (exampleIDCounter += 1).toString(),\n      };\n      break;\n    case 'utters':\n      returnJSON = {\n        utter,\n        nameUtter,\n        updatedAt: Date.now(),\n        id: (exampleIDCounter += 1).toString(),\n      };\n      break;\n    case 'stories':\n      returnJSON = {\n        nameUtter,\n        nameIntent,\n        updatedAt: Date.now(),\n        id: (exampleIDCounter += 1).toString(),\n      };\n      break;\n    default:\n      return returnJSON;\n  }\n  return returnJSON;\n};\nconst prepareExamples = (examples = [], scope) => examples.map(\n  example => createExample(example, scope),\n);\n\nconst INITIAL_STATE = {\n  filename: 'testData.json',\n  originalSource: null,\n  intents: [{}].map(e => createExample(e, 'intents')),\n  utters: [{}].map(e => createExample(e, 'utters')),\n  stories: [{}].map(e => createExample(e, 'stories')),\n  isUnsaved: false,\n  selection: null,\n  idExampleInModal: null,\n};\nexport default function reducer(state = INITIAL_STATE, action) {\n  const { type, payload } = action;\n\n  const getExampleIndex = (_id, className = 'intents') => state[className].findIndex(({ id }) => id === _id);\n\n  switch (type) {\n    case RESET: {\n      return {\n        ...state,\n        examples: [],\n        isUnsaved: false,\n        selection: null,\n        idExampleInModal: null,\n      };\n    }\n    case EDIT: {\n      const { id, value, className } = payload;\n      const prop = {\n        intents: ['nameIntent', 'intent', 'entities'],\n        utters: ['utter', 'nameUtter'],\n        stories: ['nameIntent', 'nameUtter'],\n      };\n      const update = pick(value, prop[className]);\n      state = immutable.assign(state, `${className}.${getExampleIndex(id, className)}`, {\n        ...update,\n        updatedAt: Date.now(),\n      });\n      return { ...state, isUnsaved: true };\n    }\n    case DELETE_EXAMPLE: {\n      const { id } = payload;\n      state = immutable.del(state, `examples.${getExampleIndex(id)}`);\n      return { ...state, isUnsaved: true };\n    }\n    case SET_SELECTION: {\n      const { id, start, end } = payload;\n      if (start === end) {\n        return state;\n      }\n      return immutable.set(state, 'selection', { idExample: id, start, end });\n    }\n    case SET_STATE_API: {\n      const { data } = payload;\n      state = immutable.set(state, 'intents', data.rasa_nlu_data.common_examples.intents);\n      state = immutable.set(state, 'utters', data.rasa_nlu_data.common_examples.utters);\n      state = immutable.set(state, 'stories', data.rasa_nlu_data.common_examples.stories);\n      return state;\n    }\n    case FETCH_DATA: {\n      const { data, path } = payload;\n      return {\n        ...state,\n        examplesIntents: prepareExamples(data.rasa_nlu_data.common_examples.intents, 'intents'),\n        examplesUtters: prepareExamples(data.rasa_nlu_data.common_examples.utters, 'utters'),\n        examplesStories: prepareExamples(data.rasa_nlu_data.common_examples.stories, 'stories'),\n        originalSource: data,\n        filename: path,\n      };\n    }\n    case SAVING_DONE: {\n      return {\n        ...state,\n        isUnsaved: false,\n      };\n    }\n    case EXPAND: {\n      const { id } = payload;\n\n      return immutable.set(state, `intents.${getExampleIndex(id)}.isExpanded`, true);\n    }\n    case COLLAPSE: {\n      const { id } = payload;\n\n      return immutable.set(state, `intents.${getExampleIndex(id)}.isExpanded`, false);\n    }\n    case SET_MODAL_ID: {\n      const exampleUtters = createExample({}, 'utters');\n      state = immutable.push(state, 'utters', exampleUtters);\n      return immutable.set(state, 'idExampleInModal', exampleUtters.id);\n    }\n    case OPEN_ADD_MODAL: {\n      const { className } = payload;\n      if (className === 'intents') {\n        const exampleIntents = createExample({}, 'intents');\n        state = immutable.push(state, 'intents', exampleIntents);\n        state.modalClass = className;\n        state = immutable.set(state, 'idExampleInModal', exampleIntents.id);\n      } else if (className === 'utters') {\n        const exampleUtters = createExample({}, 'utters');\n        state = immutable.push(state, 'utters', exampleUtters);\n        state.modalClass = className;\n        state = immutable.set(state, 'idExampleInModal', exampleUtters.id);\n      } else if (className === 'stories') {\n        const exampleStories = createExample({}, 'stories');\n        state = immutable.push(state, 'stories', exampleStories);\n        state.modalClass = className;\n        state = immutable.set(state, 'idExampleInModal', exampleStories.id);\n      }\n      return state;\n    }\n    case CLOSE_ADD_MODAL: {\n      const { className } = payload;\n      state = immutable.del(\n        state,\n        `${className}.${getExampleIndex(state.idExampleInModal, className)}`,\n      );\n      return immutable.set(state, 'idExampleInModal', null);\n    }\n    case SAVE_AND_CLOSE_ADD_MODAL: {\n      return immutable.set(state, 'idExampleInModal', null);\n    }\n    default:\n      return state;\n  }\n}\n","// @flow\n\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer from './reducer';\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(thunk),\n);\nexport default store;\n","import React from 'react'\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom'\n\nimport { isAuthenticated } from './services/auth'\nimport SignIn from './pages/SignIn'\nimport { Provider } from 'react-redux'\nimport App from './components/App'\nimport store from './state/store'\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      isAuthenticated() ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to={{ pathname: '/', state: { from: props.location } }} />\n      )\n    }\n  />\n)\n// store.dispatch(actions.loadData())\nconst Routes = () => (\n  <Provider store={store}>\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\" component={SignIn} />\n        <PrivateRoute path=\"/app\" component={App} />\n        <Route path=\"*\" component={() => <h1>Page not found</h1>} />\n      </Switch>\n    </BrowserRouter>\n  </Provider>\n)\n\nexport default Routes\n","import React from 'react'\nimport Routes from './routes'\n\nconst App = () => (\n  <React.Fragment>\n    <Routes />\n  </React.Fragment>\n)\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}